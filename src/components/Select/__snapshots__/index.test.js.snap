// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component] Button render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Select
    disabled={false}
    discount={2}
    handleChange={[Function]}
    price={400}
    quantities={
        Array [
            2,
            3,
            4,
            5,
          ]
    }
    ticketId="asd"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <select
        disabled={false}
        onChange={[Function]}
>
        <option
                value={0}
        >
                -
        </option>
        <option
                value={2}
        >
                2
        </option>
        <option
                value={3}
        >
                3
        </option>
        <option
                value={4}
        >
                4
        </option>
        <option
                value={5}
        >
                5
        </option>
</select>,
      "className": "select",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <option
            value={0}
>
            -
</option>,
          Array [
            <option
              value={2}
>
              2
</option>,
            <option
              value={3}
>
              3
</option>,
            <option
              value={4}
>
              4
</option>,
            <option
              value={5}
>
              5
</option>,
          ],
        ],
        "disabled": false,
        "onChange": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "-",
            "value": 0,
          },
          "ref": null,
          "rendered": "-",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": 2,
            "value": 2,
          },
          "ref": null,
          "rendered": 2,
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "host",
          "props": Object {
            "children": 3,
            "value": 3,
          },
          "ref": null,
          "rendered": 3,
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "4",
          "nodeType": "host",
          "props": Object {
            "children": 4,
            "value": 4,
          },
          "ref": null,
          "rendered": 4,
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "5",
          "nodeType": "host",
          "props": Object {
            "children": 5,
            "value": 5,
          },
          "ref": null,
          "rendered": 5,
          "type": "option",
        },
      ],
      "type": "select",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <select
          disabled={false}
          onChange={[Function]}
>
          <option
                    value={0}
          >
                    -
          </option>
          <option
                    value={2}
          >
                    2
          </option>
          <option
                    value={3}
          >
                    3
          </option>
          <option
                    value={4}
          >
                    4
          </option>
          <option
                    value={5}
          >
                    5
          </option>
</select>,
        "className": "select",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value={0}
>
              -
</option>,
            Array [
              <option
                value={2}
>
                2
</option>,
              <option
                value={3}
>
                3
</option>,
              <option
                value={4}
>
                4
</option>,
              <option
                value={5}
>
                5
</option>,
            ],
          ],
          "disabled": false,
          "onChange": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "-",
              "value": 0,
            },
            "ref": null,
            "rendered": "-",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": 2,
              "value": 2,
            },
            "ref": null,
            "rendered": 2,
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "3",
            "nodeType": "host",
            "props": Object {
              "children": 3,
              "value": 3,
            },
            "ref": null,
            "rendered": 3,
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "4",
            "nodeType": "host",
            "props": Object {
              "children": 4,
              "value": 4,
            },
            "ref": null,
            "rendered": 4,
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "5",
            "nodeType": "host",
            "props": Object {
              "children": 5,
              "value": 5,
            },
            "ref": null,
            "rendered": 5,
            "type": "option",
          },
        ],
        "type": "select",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`[Component] Button render correctly when disabled 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Select
    disabled={true}
    discount={2}
    handleChange={[Function]}
    price={400}
    quantities={
        Array [
            2,
            3,
            4,
            5,
          ]
    }
    ticketId="asd"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <select
        disabled={true}
        onChange={[Function]}
>
        <option
                value={0}
        >
                -
        </option>
        <option
                value={2}
        >
                2
        </option>
        <option
                value={3}
        >
                3
        </option>
        <option
                value={4}
        >
                4
        </option>
        <option
                value={5}
        >
                5
        </option>
</select>,
      "className": "select",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <option
            value={0}
>
            -
</option>,
          Array [
            <option
              value={2}
>
              2
</option>,
            <option
              value={3}
>
              3
</option>,
            <option
              value={4}
>
              4
</option>,
            <option
              value={5}
>
              5
</option>,
          ],
        ],
        "disabled": true,
        "onChange": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "-",
            "value": 0,
          },
          "ref": null,
          "rendered": "-",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": 2,
            "value": 2,
          },
          "ref": null,
          "rendered": 2,
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "host",
          "props": Object {
            "children": 3,
            "value": 3,
          },
          "ref": null,
          "rendered": 3,
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "4",
          "nodeType": "host",
          "props": Object {
            "children": 4,
            "value": 4,
          },
          "ref": null,
          "rendered": 4,
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "5",
          "nodeType": "host",
          "props": Object {
            "children": 5,
            "value": 5,
          },
          "ref": null,
          "rendered": 5,
          "type": "option",
        },
      ],
      "type": "select",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <select
          disabled={true}
          onChange={[Function]}
>
          <option
                    value={0}
          >
                    -
          </option>
          <option
                    value={2}
          >
                    2
          </option>
          <option
                    value={3}
          >
                    3
          </option>
          <option
                    value={4}
          >
                    4
          </option>
          <option
                    value={5}
          >
                    5
          </option>
</select>,
        "className": "select",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value={0}
>
              -
</option>,
            Array [
              <option
                value={2}
>
                2
</option>,
              <option
                value={3}
>
                3
</option>,
              <option
                value={4}
>
                4
</option>,
              <option
                value={5}
>
                5
</option>,
            ],
          ],
          "disabled": true,
          "onChange": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "-",
              "value": 0,
            },
            "ref": null,
            "rendered": "-",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": 2,
              "value": 2,
            },
            "ref": null,
            "rendered": 2,
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "3",
            "nodeType": "host",
            "props": Object {
              "children": 3,
              "value": 3,
            },
            "ref": null,
            "rendered": 3,
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "4",
            "nodeType": "host",
            "props": Object {
              "children": 4,
              "value": 4,
            },
            "ref": null,
            "rendered": 4,
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "5",
            "nodeType": "host",
            "props": Object {
              "children": 5,
              "value": 5,
            },
            "ref": null,
            "rendered": 5,
            "type": "option",
          },
        ],
        "type": "select",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
